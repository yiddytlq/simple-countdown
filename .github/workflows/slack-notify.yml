name: Slack Notifications

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_run:
    workflows:
      - Docker Build & Publish
      - Lint & Build Checks
      - CI - CodeQL Scan
    types: [completed]
  issues:
    types: [opened, edited, closed, reopened]
  issue_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Determine if workflow should notify
        id: decision
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            if [[ "${{ github.event.workflow_run.name }}" == "CI - CodeQL Scan" && "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
              echo "should_notify=false" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.workflow_run.name }}" == "Lint & Build Checks" && "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
              echo "should_notify=false" >> $GITHUB_OUTPUT
            else
              echo "should_notify=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_notify=true" >> $GITHUB_OUTPUT
          fi

      - name: Determine status emoji and color
        id: status_format
        run: |
          case "${{ github.event.workflow_run.conclusion || job.status }}" in
            success)
              echo "emoji=:success:" >> $GITHUB_OUTPUT
              echo "color=#36a64f" >> $GITHUB_OUTPUT
              ;;
            failure)
              echo "emoji=:error:" >> $GITHUB_OUTPUT
              echo "color=#ff0000" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "emoji=:warn:" >> $GITHUB_OUTPUT
              echo "color=#ffae42" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Format event details
        id: event_info
        run: |
          EVENT="${{ github.event_name }}"
          case "$EVENT" in
            push)
              BRANCH="${{ github.ref_name }}"
              COMMITS=$(echo "${{ toJson(github.event.commits) }}" | jq -r '.[].message' | sed 's/^/- /')
              echo "details=Commit(s) pushed to \`$BRANCH\`:\n$COMMITS" >> $GITHUB_OUTPUT
              ;;
            pull_request)
              TITLE="${{ github.event.pull_request.title }}"
              ACTION="${{ github.event.action }}"
              BRANCH="${{ github.event.pull_request.head.ref }}"
              echo "details=Pull Request *$ACTION*: \`$TITLE\` (branch: \`$BRANCH\`)" >> $GITHUB_OUTPUT
              ;;
            issues)
              TITLE="${{ github.event.issue.title }}"
              ACTION="${{ github.event.action }}"
              NUMBER="${{ github.event.issue.number }}"
              echo "details=Issue *$ACTION*: \`#$NUMBER - $TITLE\`" >> $GITHUB_OUTPUT
              ;;
            workflow_run)
              NAME="${{ github.event.workflow.name }}"
              echo "details=Workflow run triggered by *$NAME*" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "details=$EVENT event triggered" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Send Slack Notification
        if: ${{ steps.decision.outputs.should_notify == 'true' }}
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "${{ steps.status_format.outputs.emoji }} *GitHub Action Notification*"
            attachments:
              - color: "${{ steps.status_format.outputs.color }}"
                blocks:
                  - type: section
                    text:
                      type: mrkdwn
                      text: |
                        *Event:* `${{ steps.event_info.outputs.details }}`
                        *Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>
                        *Workflow:* `${{ github.workflow }}`
                        *Status:* `${{ github.event.workflow_run.conclusion || job.status }}`
                        *Actor:* <https://github.com/${{ github.actor }}|${{ github.actor }}>
                        *URL:* <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Details>
